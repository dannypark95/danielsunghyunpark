import React, { useState, useEffect } from "react";
import { api } from "../../../utils/api";
import debounce from "lodash/debounce";

interface TitleInputProps {
  initialTitle?: string;
  initialSlug?: string;
  initialURL?: string;
  onTitleChange: (title: string) => void;
  onSlugChange: (slug: string) => void;
}

const TitleInput: React.FC<TitleInputProps> = ({
  initialTitle = "",
  initialSlug = "",
  initialURL = "",
  onTitleChange,
  onSlugChange,
}) => {
  const [title, setTitle] = useState(initialTitle);
  const [slug, setSlug] = useState(initialSlug);
  const [editableSlug, setEditableSlug] = useState(initialURL);

  const generateSlug = debounce(async (title: string) => {
    try {
      const response = await api.post("/slugify/", { title });
      console.log("response is received!");
      console.log(response.data.slug);
      const generatedSlug = response.data.slug;
      setSlug(generatedSlug);

      if (editableSlug === initialSlug || editableSlug === "") {
        setEditableSlug(generatedSlug);
        onSlugChange(generatedSlug);
      }
    } catch (error) {
      console.error("Error generating slug:", error);
    }
  }, 500);

  useEffect(() => {
    if (title) {
      generateSlug(title);
    }
  }, [title, generateSlug]);

  useEffect(() => {
    setTitle(initialTitle);
    setEditableSlug(initialSlug);
    if (initialTitle) {
      generateSlug(initialTitle);
    }
  }, [initialTitle, initialSlug, generateSlug]);

  const useAutoGeneratedSlug = () => {
    setEditableSlug(slug);
    onSlugChange(slug);
  };

  return (
    <div>
      <div className="mb-4">
        <label className="block text-gray-700 text-sm font-bold mb-2">
          Title
        </label>
        <input
          className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          type="text"
          value={title}
          onChange={(e) => {
            const newTitle = e.target.value;
            setTitle(newTitle);
            onTitleChange(newTitle);
          }}
        />
      </div>
      <div className="flex space-x-3 mb-4">
        <div className="flex-1">
          <label className="block text-gray-700 text-sm font-bold mb-2">
            Slug
          </label>
          <input
            className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            type="text"
            value={editableSlug}
            onChange={(e) => {
              const newSlug = e.target.value;
              setEditableSlug(newSlug);
              onSlugChange(newSlug);
            }}
          />
        </div>
        <div className="flex items-end">
          <button
            type="button"
            className="px-4 py-2 bg-gray-300 text-gray-700 rounded"
            onClick={useAutoGeneratedSlug}
          >
            Use Slug
          </button>
        </div>
      </div>
    </div>
  );
};

export default TitleInput;
